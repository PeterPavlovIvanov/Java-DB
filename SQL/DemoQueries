USE [Demo]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CITIES]') AND type in (N'U'))
	DROP TABLE [dbo].[CITIES]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ORDERS]') AND type in (N'U'))
	DROP TABLE [dbo].[ORDERS]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUSTOMERS]') AND type in (N'U'))
	DROP TABLE [dbo].[CUSTOMERS]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[JOBS]') AND type in (N'U'))
	DROP TABLE [dbo].[JOBS]
GO

CREATE TABLE [dbo].[CITIES](
	[ID] [int] IDENTITY(1, 1) NOT NULL,
	[NAME] [varchar](256) NOT NULL,
	[POST_CODE] [int] NOT NULL,
	[REGION] [varchar](256) NOT NULL
	PRIMARY KEY (ID)
)
GO

CREATE TABLE [dbo].[JOBS](
	[ID] [INT]  IDENTITY(1, 1) NOT NULL,
	[NAME] [varchar](128) NOT NULL,
	PRIMARY KEY (ID)
)
GO

CREATE TABLE [dbo].[CUSTOMERS](
	[ID] [int] IDENTITY(1, 1) NOT NULL,
	[FIRST_NAME] [varchar](128) NOT NULL,
	[LAST_NAME] [varchar](128) NOT NULL,
	[AGE] int NOT NULL,
	[UCN] [varchar](16) NOT NULL,
	[JOB_ID] [INT] NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_CustomerJob FOREIGN KEY (JOB_ID) REFERENCES JOBS(ID),
)
GO

CREATE TABLE [dbo].[ORDERS](
	[ID] [int] IDENTITY(1, 1) NOT NULL,
	[PRICE] [FLOAT] NOT NULL,
	[ITEM_NAME] [varchar](259) NOT NULL,
	[CUSTOMER_ID] [int] NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT FK_CustomerOrder FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
)
GO

INSERT [JOBS]
([NAME])
VALUES ('Programmer'), ('Teacher')
GO

INSERT [CITIES]
([NAME], [POST_CODE], [REGION])
VALUES ('Sofiq', 1000, 'Bulgaria'), 
('Plovdiv', 2000, 'Bulgaria'),
('Varna', 3000, 'Bulgaria'), 
('Burgas', 4000, 'Bulgaria')
GO

INSERT CUSTOMERS
(FIRST_NAME, LAST_NAME, AGE, UCN, JOB_ID)
VALUES ('Peter', 'Ivanov', 20, '1231231234', 1),
('Gosho', 'Goshev', 20, '5454545452', 2),
('Tosho', 'Toshev', 20, '1231171224', 1)
Go

INSERT [ORDERS]
(PRICE, ITEM_NAME, CUSTOMER_ID)
VALUES (399, 'Pewdiepies Chair', 1),
(33, 'Just Chair', 2)
Go

SELECT * FROM CITIES
SELECT * FROM CUSTOMERS
SELECT * FROM JOBS
SELECT * FROM [ORDERS]
GO

CREATE UNIQUE INDEX UX_CUSTOMERS_UCN
ON CUSTOMERS(UCN)
GO

DROP INDEX UX_CUSTOMERS_UCN
ON CUSTOMERS
GO

-- basic join takes all non nulls
SELECT FIRST_NAME, LAST_NAME, AGE, PRICE, ITEM_NAME
FROM CUSTOMERS
INNER JOIN ORDERS
ON CUSTOMERS.ID = ORDERS.CUSTOMER_ID

-- left join takes all the elements from the first table even if there is null in the second table
SELECT FIRST_NAME, LAST_NAME, AGE, PRICE, ITEM_NAME
FROM CUSTOMERS
LEFT JOIN ORDERS
ON CUSTOMERS.ID = ORDERS.CUSTOMER_ID

-- oposite of left join
SELECT  PRICE, ITEM_NAME, FIRST_NAME, LAST_NAME, AGE
FROM ORDERS
RIGHT JOIN CUSTOMERS
ON ORDERS.CUSTOMER_ID = CUSTOMERS.ID

-- left join + right join
SELECT PRICE, FIRST_NAME, LAST_NAME, AGE, ITEM_NAME
FROM ORDERS
FULL OUTER JOIN CUSTOMERS
ON ORDERS.CUSTOMER_ID = CUSTOMERS.ID
